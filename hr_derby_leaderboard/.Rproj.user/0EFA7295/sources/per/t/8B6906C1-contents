library(Lahman)

# Looking at the relationship between runs, run differential, and winning percentage
# HOW DOES A RUN SCORED OR A RUN PREVENTED CORRELATE TO A WIN????

my_teams <- Teams |> 
  filter(yearID > 2000) |> 
  filter(yearID != 2020) |> 
  select(teamID, yearID, lgID, G, W, L, R, RA)

#look at the last 6 rows in the dataframe
my_teams |>  slice_tail(n=6)

my_teams <- my_teams |> 
  mutate(RD = R - RA, Wpct = W / (W + L))

# graph.
run_diff <- ggplot(my_teams , aes(x = RD, y = Wpct)) + 
  geom_point() +
  scale_x_continuous("Run differential") +
  scale_y_continuous("Winning percentage")

# CREATE A LINEAR REGRESSION LINE AND MODEL
# Response (y) ~ Predictor (x)
linfit <- lm(Wpct ~ RD, data = my_teams)

# y = .4999, x = .0006 ---> Winning Pct = .0006424 * Run Diff + .49995 (~.500)
#                   (your WP increases by .0006 pts for every +1 RD)
#                   (RA = 700 and RS = 700 --> WP ~ .500)
linfit

# you can do this automatically with + geom_smooth(method = "lm")
run_diff + geom_smooth(method = "lm", se = FALSE, color = "red")

library(broom)
library(ggrepel)

# now augment( linear regression, data we want to calc)
# finds the residuals for each team between our linear regression and expected values
my_teams_aug <- augment(linfit, data = my_teams)

# the residual plots vs the run differential (x/predictor
# residual = actual WP - what we expect with that run differential
base_plot <- ggplot(my_teams_aug, aes(x = RD, y = .resid)) + 
  geom_point(alpha = .3) + 
  geom_hline(yintercept = 0, linetype = 3) + 
  xlab("Run differential") + ylab("Residual")

base_plot

highlight_teams <- my_teams_aug |> 
  arrange(desc(abs(.resid))) |> 
  slice_head(n = 4)

base_plot + 
  geom_point(data = highlight_teams, color = "red") +
  geom_text_repel(
    data = highlight_teams, color = "red", 
    aes(label = paste(teamID, yearID))
  )

# now, we want to see how large the errors of our model are
# we can perform a root mean square error to find the avg size of errors
resid_summary <- my_teams_aug |> 
  summarize(
    N = n(),
    avg = mean(.resid),
    RMSE = sqrt((mean(.resid^2)))
  )
resid_summary

# pull the RMSE column out of the summary of RMSE
rmse <- resid_summary |>  pull(RMSE)

# The RMSE is the avg error of the residuals ie the model

my_teams_aug |> 
  summarize(
    N = n(), 
    within_one = sum(abs(.resid) < rmse),
    within_two = sum(abs(.resid) < 2 * rmse)
  ) |> 
  mutate(
    within_one_pct = within_one / N,
    within_two_pct = within_two / N
  )
# 95% of the residual should fall between 2 deviations from the Root Mean Square of the Error of Residuals


